module numbergen (
    input clk,  // clock
    input rst,  // reset

    output four[4][3]    
  )  {
  pn_gen pn_gen1(.clk(clk),.rst(rst));
  //pn_gen pn_gen2(.clk(clk),.rst(rst));
  //pn_gen pn_gen3(.clk(clk),.rst(rst));


  dff seed1[32](.clk(clk));
  //dff seed2[32](.clk(clk));
  //dff seed3[32](.clk(clk));
  

  
  always {
    pn_gen1.seed = seed1.q;
    pn_gen1.next = 0;
    
    //pn_gen2.seed = seed2.q;
    //pn_gen2.next = 0;
    
   // pn_gen3.seed = seed2.q;
    //pn_gen3.next = 0;
    

    
    if(rst){
      seed1.d = seed1.q+1;
      //seed2.d = seed2.q+2;
      //seed3.d = seed3.q + 3;
    }
    
    //nine = {pn_gen1.num[4-:5],pn_gen1.num[4-:8],pn_gen3.num[7-:8],
          //  pn_gen2.num[4-:5],pn_gen2.num[13-:8],pn_gen2.num[7-:8],
        //    pn_gen3.num[4-:5],pn_gen1.num[13-:8],pn_gen1.num[7-:8]};
    
    four = {pn_gen1.num[2-:3],pn_gen1.num[5-:3],
            pn_gen1.num[8-:3],pn_gen1.num[11-:3]};
    
      
    

      

  }
  }

