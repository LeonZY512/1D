module alu (
    input clk,  // clock
    input rst,  // reset
    input alufn[6], // alufn control signal
    input a[8], // input a
    input b[8], //input b

    output alu[8] //output of input operated by alufn
  ) {
  
  //modules of alu
    adder adder1;
    compare compare1;
    boolean boolean1;
    shifter shifter1;
    sig sumtemp[8];
    sig z; //output for zero
    sig v; //overflow
    sig n; //negative
  always {
  //assigning inputs of ALU to adder module
    adder1.clk=clk;
    adder1.rst_n=rst;
    adder1.a = a;
    adder1.b = b; 
    adder1.alufn = alufn; 
    
    //assigning inputs of ALU to compare module
    compare1.clk=clk;
    compare1.rst=rst;
    compare1.alufn = alufn;
    compare1.v = adder1.v;
    compare1.n = adder1.n;
    compare1.z = adder1.z;
    
    //assigning inputs of ALU to boolean module
    boolean1.clk=clk;
    boolean1.rst_n=rst;
    boolean1.a=a;
    boolean1.b=b;
    boolean1.alufn=alufn;
    
    //assigning inputs of ALU to shifter module
    shifter1.clk=clk;
    shifter1.rst=rst;
    shifter1.a=a;
    shifter1.b=b;
    shifter1.alufn=alufn;
    
    // alufn inputs that select the module to be used for the alu
    case(alufn[5:4]){
      b00:
      alu = adder1.sum; // selects adder output 
      b01:
      alu = boolean1.out; // selects boolean output 
      b10:
      alu = shifter1.out; //selects shifter output
      b11:
      alu = compare1.out; //selects compare output
      default:
      alu = 8b0;
  }
    //v = adder1.v;
    //n = adder1.n;
    //z = adder1.z;
}
}
