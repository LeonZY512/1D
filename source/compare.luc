module compare (
    input clk,  // clock
    input rst,  // reset
    input alufn[6], 
    input z,
    input n,
    input v,
    output out[8]
  ) {
  sig x[8];
  var i;

  always {
    out=8b0;
    case(alufn[2:0]){
      b011: // equal
      //the last bit is z, while the others are 0
        x[0]=z;
        for (i=1;i<8;i++){
          x[i]=0;
        }
        out=x;
      b101: //less than
      //the last bit is calculated by n xor v, while the others are 0
        x[0]=n^v;
        for (i=1;i<8;i++){
          x[i]=0;
        }
        out=x;
            
      b111: //less than equal
      //the last bit is calculated by (z or (n xor v)), while the others are 0
        x[0]=z|(n^v);
        for (i=1;i<8;i++){
          x[i]=0;
        }
        out=x;
    }
  }
}   