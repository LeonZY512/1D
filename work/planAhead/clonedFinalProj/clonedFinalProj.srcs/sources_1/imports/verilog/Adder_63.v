/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module adder_63 (
    input clk,
    input rst_n,
    input [5:0] alufn,
    input [7:0] a,
    input [7:0] b,
    output reg [7:0] sum,
    output reg z,
    output reg v,
    output reg n,
    output reg [7:0] led
  );
  
  
  
  reg rst;
  
  reg [8:0] sumtemp;
  
  reg [8:0] sumsvn;
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_1 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    sumtemp = 9'h000;
    led = 8'h00;
    sumsvn = a - b;
    
    case (alufn[0+1-:2])
      2'h0: begin
        sumtemp = a + b;
        led = sumtemp;
      end
      2'h1: begin
        sumtemp = a - b;
        led = sumtemp;
      end
      2'h2: begin
        sumtemp = a * b;
        led = sumtemp;
      end
      2'h3: begin
        sumtemp = a / b;
        led = sumtemp;
      end
    endcase
    sum = sumtemp;
    v = (a[7+0-:1] & ~b[7+0-:1] & (~sumsvn[7+0-:1])) | ((~a[7+0-:1]) & (b[7+0-:1]) & sumsvn[7+0-:1]);
    n = sumsvn[7+0-:1];
    z = ~(sumsvn[0+0-:1] | sumsvn[1+0-:1] | sumsvn[2+0-:1] | sumsvn[3+0-:1] | sumsvn[4+0-:1] | sumsvn[5+0-:1] | sumsvn[6+0-:1] | sumsvn[7+0-:1]);
  end
endmodule
